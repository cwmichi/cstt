/*
 * File: app/view/ui/actionCommentGrid.js
 *
 * This file was generated by Sencha Designer version 2.0.0.
 * http://www.sencha.com/products/designer/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Designer does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('cstt.view.ui.actionCommentGrid', {
    extend: 'Ext.grid.Panel',

    autoScroll: true,
    title: 'Aktionen',
    autoScroll: true,
    overflow: 'auto',
    store: 'actionStore',
    couchDBDocID: null,
    anchor: '100%',
    forceFit: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            columns: [
                {
                    xtype: 'gridcolumn',
                    hidden: true,
                    dataIndex: '_id',
                    text: 'ID'
                },
                {
                    xtype: 'datecolumn',
                    width: 130,
                    dataIndex: 'createdOnColumn',
                    text: 'Erstellt am',
                    format: 'd.m.Y H:i:s'
                },
                {
                    xtype: 'gridcolumn',
                    width: 800,
                    dataIndex: 'comment',
                    renderer: render_actions,
                    text: 'Aktion'
                },
                {
                    xtype: 'gridcolumn',
                    width: 150,
                    dataIndex: 'ownerConvert',
                    text: 'Verfasser'
                }
            ],
            viewConfig: {
                emptyText: 'Keine Aktionen zum Ticket vorhanden ...',
                loadingText: 'Lade Aktion/en zu Ticket ...'
            },
            dockedItems: [
                {
                    xtype: 'toolbar',
                    itemId: 'topToolbar',
                    dock: 'top',
                    ui: 'footer',
                    items: [
                        {
                            xtype: 'button',
                            iconCls: 'x-tbar-loading',
                            text: 'Aktualisieren',
                            tooltip: 'Aktualisieren ...',
                            listeners: {
                                click: {
                                    fn: me.onRefreshClick,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'tbseparator'
                        },
                        {
                            xtype: 'button',
                            itemId: 'openAction',
                            iconCls: 'database_go',
                            text: 'Aktion &ouml;ffnen',
                            tooltip: 'Aktion &ouml;ffnen ...'
                        }, 
                        {
                            xtype: 'tbseparator'
                        },
                        {
                            xtype: 'button',
                            itemId: 'editActionUser',
                            iconCls: 'database_edit',
                            text: 'Editieren',
                            tooltip: 'Editiert die Aktion / den Kommentar ...',
                            listeners: {
                                click: {
                                    fn: me.onEditClick,
                                    scope: me
                                }
                            }
                        }, 
                        {
                        	xtype: 'tbseparator'
                        },
                        {
                        	 xtype: 'button',
                            itemId: 'editLastStatus',
                            iconCls: 'database_edit',
                            hidden: true,
                            text: 'Letzten Status &auml;ndern',
                            tooltip: '&auml;ndert den letzten Status',
                            listeners: {
                                click: {
                                    fn: me.onChangeStatusClick,
                                    scope: me
                                }
                            }
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onRefreshClick: function(button, e, options) {
    },

    onEditClick: function(button, e, options, changeStatus) {
    },
    
    onChangeStatusClick: function(button, e, options) {
    }

});