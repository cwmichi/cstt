; CouchDB Configuration Settings

; Custom settings should be made in this file. They will override settings
; in default.ini, but unlike changes made to default.ini, this file won't be
; overwritten on server upgrade.

[couchdb]
;max_document_size = 4294967296 ; bytes
uuid = a526a38fc65ee11f7b833d6bd69569ed
delayed_commits = true

[httpd]
;port = 5984
;bind_address = 127.0.0.1
; Options for the MochiWeb HTTP server.
;server_options = [{backlog, 128}, {acceptor_pool_size, 16}]
; For more socket options, consult Erlang's module 'inet' man page.
;socket_options = [{recbuf, 262144}, {sndbuf, 262144}, {nodelay, true}]

; Uncomment next line to trigger basic-auth popup on unauthorized requests.
;WWW-Authenticate = Basic realm="administrator"

; Uncomment next line to set the configuration modification whitelist. Only
; whitelisted values may be changed via the /_config URLs. To allow the admin
; to change this value over HTTP, remember to include {httpd,config_whitelist}
; itself. Excluding it from the list would require editing this file to update
; the whitelist.
;config_whitelist = [{httpd,config_whitelist}, {log,level}, {etc,etc}]
authentication_handlers = {couch_httpd_auth, default_authentication_handler}, {ldap_auth, handle_admin_role}
secure_rewrites = false

[query_servers]
;nodejs = /usr/local/bin/couchjs-node /path/to/couchdb/share/server/main.js


[httpd_global_handlers]
;_google = {couch_httpd_proxy, handle_proxy_req, <<"http://www.google.com">>}
_session = {ldap_auth, handle_session_req}

[couch_httpd_auth]
; If you set this to true, you should also uncomment the WWW-Authenticate line
; above. If you don't configure a WWW-Authenticate header, CouchDB will send
; Basic realm="server" in order to prevent you getting logged out.
; require_valid_user = false
secret = ea96dc2dc5b0348c1e1f511dd65d523f
require_valid_user = false

[log]
;level = debug

[log_level_by_module]
; In this section you can specify any of the four log levels 'none', 'info',
; 'error' or 'debug' on a per-module basis. See src/*/*.erl for various
; modules.
;couch_httpd = error


[os_daemons]
; For any commands listed here, CouchDB will attempt to ensure that
; the process remains alive. Daemons should monitor their environment
; to know when to exit. This can most easily be accomplished by exiting
; when stdin is closed.
;foo = /path/to/command -with args

[daemons]
; enable SSL support by uncommenting the following line and supply the PEM's below.
; the default ssl port CouchDB listens on is 6984
httpsd = {couch_httpd, start_link, [https]}

[ssl]
;cert_file = /full/path/to/server_cert.pem
;key_file = /full/path/to/server_key.pem
;password = somepassword
; set to true to validate peer certificates
verify_ssl_certificates = false
; Path to file containing PEM encoded CA certificates (trusted
; certificates used for verifying a peer certificate). May be omitted if
; you do not want to verify the peer.
;cacert_file = /full/path/to/cacertf
; The verification fun (optional) if not specified, the default
; verification fun will be used.
;verify_fun = {Module, VerifyFun}
; maximum peer certificate depth
ssl_certificate_max_depth = 1
cacert_file = /Users/michaelscharrer/Entwicklung/cstt/couchdb/ssl/ca_sbs.pem
cert_file = /Users/michaelscharrer/Entwicklung/cstt/couchdb/ssl/cstt.cordaware.com.pem
key_file = /Users/michaelscharrer/Entwicklung/cstt/couchdb/ssl/serverkey.pem
password = {PASSWORD}

; To enable Virtual Hosts in CouchDB, add a vhost = path directive. All requests to
; the Virual Host will be redirected to the path. In the example below all requests
; to http://example.com/ are redirected to /database.
; If you run CouchDB on a specific port, include the port number in the vhost:
; example.com:5984 = /database
[vhosts]
;example.com = /database/
cstt3.cordaware.com = /cstt_web/_design/cstt/_rewrite

[update_notification]
;unique notifier name=/full/path/to/exe -with "cmd line arg"

; To create an admin account uncomment the '[admins]' section below and add a
; line in the format 'username = password'. When you next start CouchDB, it
; will change the password to a hash (so that your passwords don't linger
; around in plain-text files). You can add more admin accounts with more
; 'username = password' lines. Don't forget to restart CouchDB after
; changing this.
[admins]
;admin = mysecretpassword
admin = -pbkdf2-ed5a27596451ac0f72a494c555270215f9b68235,2e1052f36cb2b9605f15f04a52824d7f,10

[httpd_db_handlers]
_exportTickets = {cstt_httpd_handler, export_tickets}

[native_query_servers]
erlang = {couch_native_process, start_link, []}

[ldap_auth]
; NOTE: for all of the following configurations, if the key is suffixed in "DN", ldap_auth
; will expect you to provide a real LDAP Distinguished Name.

; If you use handle_admin_role to assign your system admins, specify the authentication handlers it should
; query here. See SystemAdminRoleName for more details.
AuthenticationHandlers = {couch_httpd_auth, cookie_authentication_handler}, {ldap_auth, handle_basic_auth_req}

; Enable SSL to the LDAP server.
UseSsl = false

LdapPort = 389

; The LDAP servers to use for searches and authentication, separated by commas. These will be tried in-order.
LdapServers = 192.168.1.42, cwserver10.cordaware.local

; The DN to narrow the scope of searches for users and groups.
BaseDN = DC=cordaware10,DC=local

; ldap_auth will use this user DN and password to search for users trying to authenticate.
; if you have anonymous LDAP queries enabled (not recommended) you may simply provide the
; `anon` CN and a blank password.
SearchUserDN = CN=michael scharrer,CN=Users,DC=cordaware10,DC=local
SearchUserPassword = cordaware

; On ActiveDirectory, you might choose from:
; - sAMAccountName, e.g. jsmith
; - userPrincipalName, e.g. jsmith@example.com
;   NOTE: if you use userPrincipalName, be sure to URL-encode the username when using basic auth.
;   e.g. http://jsmith%40example.com:password@example.com:5984
UserDNMapAttr = sAMAccountName

; The LDAP attribute of the group to use as the role name.
GroupDNMapAttr = name

; The role to grant system administrative privileges to.
; If you include {ldap_auth, handle_admin_role} in your authentication_handlers, it will
; grant the system admin role to anyone who has this role assigned. BE CAREFUL.
SystemAdminRoleName = administratoren

