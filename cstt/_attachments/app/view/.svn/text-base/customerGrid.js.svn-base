/*
 * File: app/view/customerGrid.js
 *
 * This file was generated by Sencha Designer version 2.0.0.
 * http://www.sencha.com/products/designer/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Designer does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * You should implement event handling and custom methods in this
 * class.
 */

Ext.define('cstt.view.customerGrid', {
    extend: 'cstt.view.ui.customerGrid',
    alias: 'widget.customerGrid',

    initComponent: function() {
        var me = this;
        me.callParent(arguments);
    },

    onRefreshClick: function(button, e, options) {
        this.store.load();
    },

    onAddClick: function(button, e, options) {
        if (isAdmin === true || isSales === true) {
            // Zeige das Formular an (Kunden)					
            var customerWindow = Ext.widget('createCustomerWindow');
        }
        else { boxErrorAccessDenied(); }
    },

    onEditClick: function(grid, rowIndex, colIndex) {
        if (isAdmin === true || isSales === true) {
            // Zeige das Formular an (Kunden)	
            selectCustomer = grid.store.getAt(rowIndex);

            if (selectCustomer) {
                var customerWindow = Ext.widget('createCustomerWindow');

                customerWindow.setTitle('Kunde editieren ...');
                customerWindow.setIconCls('database_edit');
                customerWindow.down('form').getForm().loadRecord(selectCustomer);	



                // Workaround für Pilotkunde beim Editieren -- später afterRender function verwenden!
                if(selectCustomer.get('pilot') === true) {			
                    customerWindow.down('#addOnsProduct').allowBlank = true;
                    customerWindow.down('#editionProduct').allowBlank = true;
                    customerWindow.down('#numberOfLicences').allowBlank = true;
                    customerWindow.down('#supportTo').allowBlank = true;
                    customerWindow.down('form').doLayout();				
                }


                customerWindow.down('#save').hide();
                customerWindow.down('#edit').show();		

            }
            else {
                Ext.MessageBox.show({
                    title: 'Hinweis',
                    msg: 'Bitte w&auml;hlen Sie zuerst einen Kunden aus!',
                    buttons: Ext.MessageBox.OK,
                    icon: Ext.MessageBox.INFO
                });
            }

        }
        else { boxErrorAccessDenied(); }
    },

    pressButtonHistoryVersionCustomer: function(button, e, options) {
        // (Kunden)    
        selectCustomer = this.getView().getSelectionModel().getSelection()[0];

        if (selectCustomer) {

            Ext.getCmp('viewport').showHistoryVersionToCustomer(selectCustomer.get('_id'), selectCustomer.get('company'));

        } else {
            Ext.MessageBox.show({
                title: 'Hinweis',
                msg: 'Bitte wählen Sie zuerst einen Kunden aus!',
                buttons: Ext.MessageBox.OK,
                icon: Ext.MessageBox.INFO
            });
        }
    }

});