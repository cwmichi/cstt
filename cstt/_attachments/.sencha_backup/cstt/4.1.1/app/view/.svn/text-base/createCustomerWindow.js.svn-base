/*
 * File: app/view/createCustomerWindow.js
 *
 * This file was generated by Sencha Designer version 2.0.0.
 * http://www.sencha.com/products/designer/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Designer does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * You should implement event handling and custom methods in this
 * class.
 */

Ext.define('cstt.view.createCustomerWindow', {
    extend: 'cstt.view.ui.createCustomerWindow',
    alias: 'widget.createCustomerWindow',

    initComponent: function() {
        var me = this;
        me.callParent(arguments);
    },
    
    checkPilotVtiger: function(form) {
    	
    	var pilot = form.down('#pilotCheckbox'),
    		pilotValue = pilot.getValue(),
    		vtiger = form.down('#accountid'),
    		vtigerValue = vtiger.getValue();
    		
    		
    		if(pilotValue === true && vtigerValue !== 0) {
    			Ext.MessageBox.show({
					title: 'Achtung',
					msg: 'Es wurde eine VTiger ID gesetzt, aber der Kunde ist als Pilotkunde markiert!',
					buttons: Ext.MessageBox.OK,
					icon: Ext.MessageBox.ERROR
				});
    		} else {
    			return true;
    		}
    	
    },

    onSaveClick: function(button, e, options) {
    	if (this.checkPilotVtiger(this.down('form'))) {
				
   
        // Formularüberprüfung
        if (this.down('form').getForm().isValid()) {
            this.down('#creator_ID').setValue(sessionUserID);
            // Wait Message anzeigen	
            Ext.MessageBox.wait('Speichern ...', 'Bitte warten ...');

            Ext.Ajax.request({
                waitMsg: 'Bitte warten...',
                method: 'POST',
                url: '../../',
                scope: this,
                // Header auf application/json setzen - CouchDB
                headers: {
                    'Content-Type': 'application/json; charset=utf-8'
                },
                // Die Formular-Eingaben uebergeben
                params: Ext.JSON.encode(this.down('form').getForm().getValues()),
                success: function(){

                    // Fenster schliessen
                    this.close();
                    // Wait Message verbergen			
                    Ext.MessageBox.hide();

                    Ext.data.StoreManager.lookup('companyComboBoxStore').load();	
                    Ext.data.StoreManager.lookup('companyConvertStore').load();				

                    if(Ext.getCmp('viewport').getComponent('centerTabPanel').getComponent('customerGridTab')) {
                        Ext.data.StoreManager.lookup('allCustomersStore').load();				
                    }	

                },
                failure: function(){
                    // Wait Message verbergen			
                    Ext.MessageBox.hide();

                    // Zeige Fehler waehrend des Speicherns			
                    boxErrorDuringSaving();			  
                }
            });
        }
        else {		
            // Zeige Warnung - nicht alle Felder ausgefuellt
            boxWarningRequiredFields();	
        }
                    } else {
    			return false;
    		}
    },

    onEditClick: function(button, e, options) {
    	
    	if (this.checkPilotVtiger(this.down('form'))) {
    	
        if (this.down('form').getForm().isValid()) {
        this.down('#editor_ID').setValue(sessionUserID);
            var record = this.down('form').getRecord();		

            this.down('form').getForm().updateRecord(record); 
            
            // Workaround: damit das Supportdatum im Format Y-m-d gespeichert wird 
           var supportTo = this.down('#supportTo').getRawValue();
           var supportFrom = this.down('#supportFrom').getRawValue();           
           record.set('supportTo',supportTo);
           record.set('supportFrom',supportFrom);
           // Workaround: Ende

           Ext.data.StoreManager.lookup('allCustomersStore').sync();
           Ext.data.StoreManager.lookup('allCustomersStore').removeAll();

            this.close();

            Ext.MessageBox.show({
                title: 'Status',
                msg: '&Auml;nderungen wurden gespeichert.',
                buttons: Ext.MessageBox.OK,
                scope: this,
                fn: function() {
                    Ext.example.msg('Status', 'Synchronisierung');	
                    Ext.data.StoreManager.lookup('allCustomersStore').load();
                    Ext.data.StoreManager.lookup('companyComboBoxStore').load();
                    Ext.data.StoreManager.lookup('companyConvertStore').load();				
                }
            });

        }
        else {
            // Zeige Warnung - nicht alle Felder ausgefuellt
            boxWarningRequiredFields();
        }
        } else {
    			return false;
    		}
    },

    onCancelClick: function(button, e, options) {
        this.close();
    }

});