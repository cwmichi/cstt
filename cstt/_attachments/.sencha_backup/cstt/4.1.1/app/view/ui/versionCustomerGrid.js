/*
 * File: app/view/ui/versionCustomerGrid.js
 *
 * This file was generated by Sencha Designer version 2.0.0.
 * http://www.sencha.com/products/designer/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Designer does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('cstt.view.ui.versionCustomerGrid', {
    extend: 'Ext.grid.Panel',

    height: 250,
    width: 400,
    autoScroll: true,
    title: 'Versionsübersicht',
    store: 'versionCustomerStore',
    couchDBDocID: 'null',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            columns: [
                {
                    xtype: 'gridcolumn',
                    width: 200,
                    dataIndex: 'component',
                    text: 'Komponente'
                },
                {
                    xtype: 'datecolumn',
                    width: 200,
                    dataIndex: 'patchDate',
                    text: 'Datum der Änderung',
                    format: 'd.m.Y'
                },
                {
                    xtype: 'gridcolumn',
                    width: 100,
                    dataIndex: 'version',
                    text: 'Version'
                }
            ],
            viewConfig: {
                emptyText: 'Keine Einträge in der Versionsübersicht vorhanden ...',
                loadingText: 'Lade Versionsübersicht ...'
            },
            dockedItems: [
                {
                    xtype: 'toolbar',
                    itemId: 'topToolbar',
                    dock: 'top',
                    items: [
                        {
                            xtype: 'button',
                            iconCls: 'x-tbar-loading',
                            text: 'Aktualisieren',
                            tooltip: 'Aktualisieren ...',
                            listeners: {
                                click: {
                                    fn: me.onRefreshClick,
                                    scope: me
                                }
                            }
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onRefreshClick: function(button, e, options) {
    }

});