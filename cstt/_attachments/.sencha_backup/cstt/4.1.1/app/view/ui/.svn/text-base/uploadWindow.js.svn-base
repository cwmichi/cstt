/*
 * File: app/view/ui/uploadWindow.js
 *
 * This file was generated by Sencha Designer version 2.0.0.
 * http://www.sencha.com/products/designer/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Designer does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('cstt.view.ui.uploadWindow', {
    extend: 'Ext.window.Window',

    autoShow: false,
    height: 108,
    width: 420,
   // height: 260,
   // width: 450,
    resizable: false,
    title: 'Neue Datei hochladen ...',
    couchDBDocID: 'null',
    ExtJSattachmentGridID: 'null',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
        	listeners: {
                afterrender: {
                    fn: me.onWindowAfterRender,
                    scope: me
                },
                destroy: {
                    fn: me.onWindowDestroy,
                    scope: me
                }
            },
            dockedItems: [
               /* {
	                    xtype: 'label',
	                    padding: 10,
	                    html: '<b>Hinweis:</b> Hochgeladene Dateien werden erst nach dem Schließen des Fenster in der Tabelle dargestellt.',
	                    dock: 'top'
	                },*/{
                    xtype: 'toolbar',
                    itemId: 'bottomToolbar',
                    ui: 'footer',
                    width: 400,
                    dock: 'bottom',
                    items: [
                       {
                            xtype: 'button',
                            text: 'Datei/en hochladen',
                            listeners: {
                                click: {
                                    fn: me.onSaveClick,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'tbseparator'
                        },
                        {
                            xtype: 'button',
                            text: 'Schließen',
                            listeners: {
                                click: {
                                    fn: me.onCancelClick,
                                    scope: me
                                }
                            }
                        }
                    ]
                }
            ],
           items: [
                {
                    xtype: 'form',
                    itemId: 'uploadForm',
                    couchUpload: true,
                    border: false,
                    bodyPadding: 10,
                    items: [
                        {
                            xtype: 'hiddenfield',
                            itemId: 'couchrev',
                            name: '_rev',
                            fieldLabel: 'Label'
                        },
                        {
                            xtype: 'filefield',
                            itemId: 'file',
                            allowBlank: false,
                            name: '_attachments',
                            fieldLabel: 'Datei',
                            buttonText: 'Datei auswählen ...',
                            anchor: '100%'
                            /*listeners: {
							    change: function(f,v){
							        var node = Ext.DomQuery.selectNode('input[id='+f.getInputId()+']');
							        node.value = v.replace("C:\\fakepath\\","");
							    }
							}*/
						}
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onSaveClick: function(button, e, options) {
    },

    onCancelClick: function(button, e, options) {
    },
    
    onWindowAfterRender: function(abstractcomponent, options) {

    },
    
    onWindowDestroy: function(abstractcomponent, options) {

    }

});